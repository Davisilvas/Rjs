****** VERSÃO 1 ******
import React from "react";

    class Counter extends React.Component{
        
        constructor(props){
            super(props);
            this.state = {contador: 0}
            this.add = this.add.bind(this);
            this.decrease = this.decrease.bind(this);
            this.reset = this.reset.bind(this);
        }
        
        add(){
            this.setState((state) => {
                return{
                    count: state.count + 1
                };
            }, () =>{
                localStorage.setItem("state",JSON.stringify(this.state))
            })
        }

        decrease(){
            this.setState((state) => {
                return{
                    count: state.count - 1
                };
            }, () =>{
                localStorage.setItem("state",JSON.stringify(this.state))
            })
        }

        reset(){
            this.setState((state) => {
                return{
                    count: state.count = 0
                };
            }, () =>{
                console.log(this.state)
                localStorage.setItem("state",JSON.stringify(this.state))
            })
        }

        // shouldComponentUpdate(){
        //     return false
        // }

        componentWillUnmount(){
            // chamado sempre que o componente for removido da tela
            // bom pra liberar memória que foi alocada antes
            // ex: excluir uma tarefa de uma to do list, parar timer
        }

        componentDidMount(){
            this.setState(JSON.parse(localStorage.getItem("state")))
        }
        
        render(){
            return(<div>
                <h1>Counter: {this.state.count}</h1>
                <button onClick = {this.add}>Add</button>
                <button onClick = {this.decrease}>decrease</button>
                <button onClick = {this.reset}>reset</button>
            </div>)
        }
    }
export default Counter;


****** VERSÃO 2 ******

import React, {useState} from "react";

    function Counter(props){

        const [count, setCount] = useState(props.count);
        const [, decreaseCount] = useState();
        const [, resetCount] = useState();
        
        function add(){
            setCount(count + 1)
            // console.log("Atualizando!")
        }

        function decrease(){
            decreaseCount(setCount(count - 1))
            console.log(count)
        }

        function reset(){
            resetCount(setCount(count - count))
            
        }
        
        return(
        // como não é uma clase mais e sim uma função, não precisa mais do this
            <div>
                <h1>Counter: {count}</h1>
                <button onClick={add}>Add</button>
                <button onClick={decrease}>decrease</button>
                <button onClick={reset}>reset</button>
            </div>
        )
    }

export default Counter;